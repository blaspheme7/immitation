package dao;

import java.util.List;

import javax.sql.DataSource;

import org.apache.ibatis.session.SqlSession;
import org.apache.ibatis.session.SqlSessionFactory;

import annotation.Component;
import dao.BoardDao;
import vo.Writing;

@Component("BoardDao")
public class MySqlBoardDao implements BoardDao {
	
	SqlSessionFactory sqlSessionFactory;
	
	public void setSqlSessionFactory(SqlSessionFactory sqlSessionFactory) {
		this.sqlSessionFactory=sqlSessionFactory;
	}

	DataSource ds;
	
	public void setDataSource(DataSource ds) {
	    this.ds = ds;
	}
	
	public List<Writing> selectList() throws Exception {
		SqlSession sqlSession=sqlSessionFactory.openSession();
			    
	    try {
	    	return sqlSession.selectList("dao.BoardDao.selectList");
	    } finally {
	    	sqlSession.close();
	    }
	  }

	public int insert(Writing writing) throws Exception {
	    SqlSession sqlSession=sqlSessionFactory.openSession();
	    try {
	    	int count=sqlSession.insert("dao.BoardDao.insert", writing);
	    	sqlSession.commit();
	    	return count;
	    } finally {
	    	sqlSession.close();
	    }
	}

	@Override
	public int update(Writing writing) throws Exception { 
		SqlSession sqlSession=sqlSessionFactory.openSession();
		
	    try {
	    	int count=sqlSession.update("dao.ProjectDao.update", writing);
	    	sqlSession.commit();
	    	return count;
	    } finally {
	    	sqlSession.close();
	    }
	  }
	
	
	@Override
	public Writing selectOne(int no) throws Exception {
		SqlSession sqlSession=sqlSessionFactory.openSession();
		
		try {
			return sqlSession.selectOne("dao.BoardDao.selectOne", no); 
		} finally {
			sqlSession.close();
		}
	}
	
	public int delete(int no) throws Exception {
		SqlSession sqlSession=sqlSessionFactory.openSession();
		try {
			int count=sqlSession.delete("dao.BoardDao.delete", no);
			sqlSession.commit();
			return count;
		} finally {
			sqlSession.close();
		}
	}

	@Override
	public int refnumUp(int no) throws Exception {
		SqlSession sqlSession=sqlSessionFactory.openSession();
		try {
			int count=sqlSession.update("dao.BoardDao.refnumUp",no);
			sqlSession.commit();
			return count;
		} finally {
			sqlSession.close();
		}
	}
}

